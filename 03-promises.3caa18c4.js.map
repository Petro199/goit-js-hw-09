{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,OAC3BC,EAAgBC,KAAKC,SAAW,GAYtC,OAXAC,QAAQC,IAAIJ,GACM,IAAIK,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACTL,QAAQC,IAAIN,GACRE,EACFM,EAAQ,CAAER,WAAUC,WAEpBQ,EAAO,CAAET,WAAUC,U,GAEpBA,E,IAKMU,SAASC,cAAc,SA6B/BC,iBAAiB,UA5BtB,SAAkBC,GAChBA,EAAMC,iBACN,IAEgBC,EAAZF,EAAMG,OADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAASC,OAAOJ,EAAMK,OACtBC,EAAQF,OAAOH,EAAKI,OACpBE,EAAUH,OAAOF,EAAOG,OAC5BnB,QAAQC,IAAIgB,GACZjB,QAAQC,IAAImB,GACXpB,QAAQC,IAAIoB,GAEb,IAAK,IAAIC,EAAW,EAAGA,EAAWD,EAASC,GAAY,EACrD7B,EAAc,CAAEE,SAAA2B,EAAU1B,OAAAqB,IACvBM,MAAK,SAAA7B,G,IAAGC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OACjB4B,EAAAjC,GAASkC,OAAOC,QACd,qBAAwCC,OAAnBhC,EAAW,EAAE,QAAagC,OAAP/B,EAAO,M,IAGlDgC,OAAM,SAAAlC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAMF,EAANE,OAClB4B,EAAAjC,GAASkC,OAAOI,QACd,oBAAuCF,OAAnBhC,EAAW,EAAE,QAAagC,OAAP/B,EAAO,M,IAGpDqB,EAASG,EAAQH,EACjBjB,QAAQC,IAAIgB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise({ position, delayN }) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(shouldResolve);\n const newPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(position);\n      if (shouldResolve) {\n        resolve({ position, delayN });\n      } else {\n        reject({ position, delayN });\n      }\n    }, delayN);\n  });\n  return newPromise;\n}\n\nconst form = document.querySelector('.form')\nfunction onSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.target;\n  let delayN = Number(delay.value);\n  let stepN = Number(step.value);\n  let amountN = Number(amount.value);\n  console.log(delayN);\n  console.log(stepN);\n   console.log(amountN);\n  \n  for (let position = 0; position < amountN; position += 1) {\n    createPromise({ position, delayN })\n      .then(({ position, delayN }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delayN}ms`\n        );\n      })\n      .catch(({ position, delayN }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delayN}ms`\n        );\n      });\n    delayN = stepN + delayN;\n    console.log(delayN);\n  }\n}\nform.addEventListener('submit', onSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","param","position","delayN","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay","step","amount","delayN1","Number","value","stepN","amountN","position1","then","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3caa18c4.js.map"}